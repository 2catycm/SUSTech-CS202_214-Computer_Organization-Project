.include "../commons/std_io_minisys.macro.mips"
.data
.text
.globl main
main: # todo: 没什么用，coe文件不能位置无关。
jal static_initialization
begin:
    li $v0 10
    jal sleep # 降低速度
    
    jal decode # 会覆盖a0 a1的值。
    move $a2 $a0
    
    sll $a0 $a0 5
    jal write_control # 指示当前是哪一个case
    set_s_to_be_seven_numbers()
    beq $a2 $zero case0
    beq $a2 $s1 case1
    beq $a2 $s2 case2
    beq $a2 $s3 case3
    beq $a2 $s4 case4
    beq $a2 $s5 case5
    beq $a2 $s6 case6
    beq $a2 $s7 case7
case0:
    jal read
    jal static_initialization
    # jal write_data
    # jal is_binary_palindrome
    # move $v1 $v0
    # li $v0 0
    # jal write_control_set
    j begin
case1:
    j begin
case2:
    j begin
case3:
    j begin
case4:
    j begin
case5:
    j begin
case6:
    j begin
case7:
    j begin
j begin
.include "../commons/std_io_minisys.impl.mips"
.include "../commons/std_palindrome.impl.mips"